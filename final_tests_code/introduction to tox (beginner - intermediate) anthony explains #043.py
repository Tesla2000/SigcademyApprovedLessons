import random
import langchain_openai
import langchain_core
def generate_questions() -> list[str]:
    questions = ['What is the name of the tool being explained in the text?', 'What is the purpose of tox?', 'What is the main difference between tox and make?', 'What is the key configuration section in the tox configuration file?', 'What is the purpose of the [tox] section in the tox configuration file?', 'What is the purpose of the testenv section in the tox configuration file?', 'How does tox manage setting up virtual environments for testing?', 'What file is commonly used to list development dependencies in a Python project for tox?', 'Why is the spacing important when listing dependencies in the tox configuration file?', "What is the purpose of the 'tox' tool?", "How can the speaker install dependencies using 'tox'?", "How can the speaker run tests using 'tox'?", "What is the purpose of 'pause args' in 'tox'?", 'What is the purpose of the F string tests in the given context?', 'How can the speaker run only the F string tests using the provided tool?', 'What is the benefit of using Talks for creating a virtual development environment?', "What does the '-e' flag indicate when installing a library in editable mode?", 'What is mentioned as a related tool to Talks with a slightly different approach to configuring stuff?']
    return random.sample(questions, min(len(questions), 5))


def generate_answers(question: str, answer: str, _: str) -> bool | str:
    reference_answers = dict(zip(['What is the name of the tool being explained in the text?', 'What is the purpose of tox?', 'What is the main difference between tox and make?', 'What is the key configuration section in the tox configuration file?', 'What is the purpose of the [tox] section in the tox configuration file?', 'What is the purpose of the testenv section in the tox configuration file?', 'How does tox manage setting up virtual environments for testing?', 'What file is commonly used to list development dependencies in a Python project for tox?', 'Why is the spacing important when listing dependencies in the tox configuration file?', "What is the purpose of the 'tox' tool?", "How can the speaker install dependencies using 'tox'?", "How can the speaker run tests using 'tox'?", "What is the purpose of 'pause args' in 'tox'?", 'What is the purpose of the F string tests in the given context?', 'How can the speaker run only the F string tests using the provided tool?', 'What is the benefit of using Talks for creating a virtual development environment?', "What does the '-e' flag indicate when installing a library in editable mode?", 'What is mentioned as a related tool to Talks with a slightly different approach to configuring stuff?'], ['tox', 'Tox is a command runner tool that is used for testing Python projects.', 'Tox is more of a command runner tool while make is a build system that deals with inputs and outputs.', 'The key configuration section in the tox configuration file is the [tox] section.', 'The [tox] section defines the environments where tests will run and provides hints to users about available environments.', 'The testenv section in the tox configuration file lists the commands and dependencies needed to test the Python library.', 'Tox manages setting up virtual environments by installing dependencies and running commands specified in the testenv section.', 'requirements-dev.txt is commonly used to list development dependencies in a Python project for tox.', 'The spacing is important to separate dependencies in the tox configuration file, as tox treats them as separate dependencies if not properly spaced.', "The 'tox' tool is used to automate and manage the testing of Python projects across multiple environments.", "Dependencies can be installed using 'tox' by specifying them in the 'deps' section of the configuration file without spaces between them.", "Tests can be run using 'tox' by specifying the test command in the 'commands' mapping of the configuration file. For example, 'tox -e py38' will run tests in the Python 3.8 environment.", "The 'pause args' feature in 'tox' allows the speaker to specify individual tests or parameters to run, providing more flexibility in test execution.", 'The F string tests focus on testing the functionality related to F strings in the codebase.', "You can run only the F string tests by using the 'PI test test' command directly after creating a development environment with Talks.", 'Talks provides a convenient way to create a virtual environment outside of the docs directory, allowing for faster interactive work without involving all the Talk stuff in the middle.', "The '-e' flag indicates that the library is installed in editable mode, allowing for direct modifications and testing without the need to go through Talks.", 'Knox is mentioned as a related tool to Talks, which has a slightly different approach to configuring things using a Python file.']))
    chat = langchain_openai.ChatOpenAI(model="gpt-3.5-turbo-1106", temperature=0)
    chat_answer = chat.invoke(
        [
            langchain_core.messages.SystemMessage(content="You will be given question, reference answer pair and users answer. "
                                  'You have to decide if the answer is correct. '
                                  'If it is respond with a single work "Correct" otherwise return a hint about the answer. '),
            langchain_core.messages.SystemMessage(content='The question: ' + question + '\n'
                                  'The reference answer: ' + reference_answers[question]),
            langchain_core.messages.HumanMessage(
                content=answer
            )
        ]
    ).content
    if chat_answer.startswith("Correct"):
        return True
    return chat_answer
