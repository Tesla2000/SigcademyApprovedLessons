import random
import langchain_openai
import langchain_core
def generate_questions() -> list[str]:
    questions = ['What does CSRF stand for?', 'What is another term for CSRF?', 'What is Flask?', 'What type of endpoints are typically vulnerable to CSRF attacks?', 'What is the purpose of setting up a fake form in a CSRF attack?', 'What is the example of a cross-site request forgery attack described in the text?', 'What is the purpose of using a CSRF token in preventing cross-site request forgery attacks?', 'What is CSRF?', 'How can CSRF attacks be prevented?']
    return random.sample(questions, min(len(questions), 5))


def generate_answers(question: str, answer: str, _: str) -> bool | str:
    reference_answers = dict(zip(['What does CSRF stand for?', 'What is another term for CSRF?', 'What is Flask?', 'What type of endpoints are typically vulnerable to CSRF attacks?', 'What is the purpose of setting up a fake form in a CSRF attack?', 'What is the example of a cross-site request forgery attack described in the text?', 'What is the purpose of using a CSRF token in preventing cross-site request forgery attacks?', 'What is CSRF?', 'How can CSRF attacks be prevented?'], ['CSRF stands for Cross-Site Request Forgery.', 'Another term for CSRF is XSRF.', 'Flask is a web framework for Python.', 'Endpoints with side-effects, such as POST or PUT endpoints, are typically vulnerable to CSRF attacks.', 'The purpose of setting up a fake form in a CSRF attack is to trick users into unknowingly submitting requests to a target endpoint with side-effects.', "The example of a cross-site request forgery attack described in the text involves creating a form on a website that posts to another website without the user's knowledge. The attacker can use hidden forms, iframes, and styling to make the form invisible to the user and automatically trigger actions on the targeted website, such as firing missiles.", 'The purpose of using a CSRF token in preventing cross-site request forgery attacks is to ensure that the post request originated from the intended website and not from a malicious source. The CSRF token acts as a unique and secret identifier that verifies the authenticity of the request, making it difficult for attackers to forge requests.', "CSRF stands for Cross-Site Request Forgery. It is a type of attack where a malicious website tricks a user's browser into making a request to a different website on which the user is authenticated, potentially causing actions to be taken on behalf of the user without their consent.", 'CSRF attacks can be prevented by using unique CSRF tokens for each user session, combining a secret value on the server with a cookie value to generate the CSRF token, and validating the token on the server side to ensure that the request came from the expected source. Using unique endpoints for CSRF tokens and utilizing CSRF protection libraries in web frameworks can also help prevent CSRF attacks.']))
    chat = langchain_openai.ChatOpenAI(model="gpt-3.5-turbo-1106", temperature=0)
    chat_answer = chat.invoke(
        [
            langchain_core.messages.SystemMessage(content="You will be given question, reference answer pair and users answer. "
                                  'You have to decide if the answer is correct. '
                                  'If it is respond with a single work "Correct" otherwise return a hint about the answer. '),
            langchain_core.messages.SystemMessage(content='The question: ' + question + '\n'
                                  'The reference answer: ' + reference_answers[question]),
            langchain_core.messages.HumanMessage(
                content=answer
            )
        ]
    ).content
    if chat_answer.startswith("Correct"):
        return True
    return chat_answer
